{"version":3,"sources":["components/img/profile-company.png","components/img/tela-letra.png","components/Maps/Route.js","components/Maps/OwnLocation.js","components/Login/Login.js","components/Navbar/Navbar.js","components/Footer/Footer.js","components/formulario empresa/Company.js","components/signin/Signin.js","components/Maps/FilterMarker.js","components/CompanyProfile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Component","Login","react_default","a","createElement","className","src","type","Object","defineProperty","Button_default","variant","FilterMarker","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","update","bind","assertThisInitialized","state","app_id","app_code","position","zoom","map","image","style","markerGlass","markerPaperboard","markerPlastics","markerTechnology","markerTextile","objectsToEliminate1","showGlassMarker","showPaperboardMarker","showPlasticsMarker","showTechonologyMarker","showTextileMarker","window","H","service","Platform","container","layers","settings","Map","mapevents","MapEvents","ui","UI","createDefault","_this2","platform","getPlatform","createDefaultLayers","element","document","getElementById","getMap","normal","center","setTimeout","navigator","geolocation","getCurrentPosition","setCenter","lat","coords","latitude","lng","longitude","ownMarker","Marker","addObject","circle","Circle","geo","Point","stylePto","fillColor","lineWidth","strokeColor","setData","error","setState","message","Behavior","getUI","objectSpread","fetch","then","data","json","results","filter","glass","paperboard","plastics","technology","textile","_this3","removeObjects","tempArray","forEach","marker","push","addEventListener","_this4","_this5","_this6","_this7","info","changeTheme","layer","getMapTileService","createTileLayer","setBaseLayer","onClick","id","width","height","background","App","getValue","companies","console","log","Maps_FilterMarker","listCompany","components_Login_Login","Boolean","location","hostname","match","ReactDOM","render","src_App","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8274ea71.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile-company.4572de84.png\";","module.exports = __webpack_public_path__ + \"static/media/tela-letra.fe53b7a8.png\";","import React, {Component} from 'react';\n// import PropTypes from 'prop-types';\n\nclass Map extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.platform = null;\n        this.map = null;\n\n        this.state = {\n            app_id: props.app_id,\n            app_code: props.app_code,\n            position: null,\n            zoom: props.zoom,\n            map: null,\n            image: props.image,\n            style: props.style,\n        }\n    }\n\n    getPlatform() {\n        \n        return new window.H.service.Platform(this.state);\n    }\n\n    getMap(container, layers, settings) {\n        return new window.H.Map(container, layers, settings);\n    }\n\n    getEvents(map) {\n        return new window.H.mapevents.MapEvents(map);\n    }\n\n    getUI(map, layers) {\n        return new window.H.ui.UI.createDefault(map, layers);\n       \n    }\n    \n\n    componentDidMount() {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                (position) => {\n                    this.map.setCenter({\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude\n                    });\n                },\n                (error) => this.setState({\n                    error: error.message\n                })\n            );\n        }\n        //aqui se llaman todos los estados\n        this.platform = this.getPlatform();\n        \n\n        //aqui se configura el tipo de mapa\n        var layers = this.platform.createDefaultLayers();\n\n        //con element renderizamos el mapa\n        var element = document.getElementById('here-map');\n\n        //muestra mapa de acuerdo a mi ubicacion\n        this.map = this.getMap(element, layers.normal.map, {\n            center: this.state.center,\n            zoom: this.state.zoom,\n        }); \n\n        //con esto puedo hacer zoom \n        new window.H.mapevents.Behavior(new window.H.mapevents.MapEvents(this.map));\n      \n       this.getUI(this.map, layers);\n        this.setState({\n            ...this.state,\n            map: this.map\n        });\n\n\n\n  \n  // Crear los parámetros para la solicitud de enrutamiento.:\n  const routingParameters = {\n    // El modo de enrutamiento:\n    'mode': 'fastest;car', \n    // El punto de partida de la ruta:\n    'waypoint0': 'geo!-33.44922637939453,-70.6505355834961',\n    // El punto final de la ruta.:\n    'waypoint1': 'geo!-33.4190702,-70.6418162',\n    // Para recuperar la forma de la ruta, elegimos el modo de representación de ruta 'display'\n    'representation': 'display'\n  };\n\n  const routingParameters1 = {\n    // El modo de enrutamiento:\n    'mode': 'fastest;pedestrian', \n    // El punto de partida de la ruta:\n    'waypoint0': 'geo!-33.44922637939453,-70.6505355834961',\n    // El punto final de la ruta.:\n    'waypoint1': 'geo!-33.4190702,-70.6418162',\n    // Para recuperar la forma de la ruta, elegimos el modo de representación de ruta 'display'\n    'representation': 'display'\n  };\n\n//   const routingParameters2 = {\n//     // El modo de enrutamiento:\n//     'mode': 'fastest;carHOV', \n//     // El punto de partida de la ruta:\n//     'waypoint0': 'geo!-33.44922637939453,-70.6505355834961',\n//     // El punto final de la ruta.:\n//     'waypoint1': 'geo!-33.4190702,-70.6418162',\n//     // Para recuperar la forma de la ruta, elegimos el modo de representación de ruta 'display'\n//     'representation': 'display'\n//   };\n \n  \n  // Definir una función de devolución de llamada para procesar la respuesta de enrutamiento.:\n  let onResult = (result) =>  {\n    var route,\n      routeShape,\n      startPoint,\n      endPoint,\n      linestring;\n    if(result.response.route) {\n    // Escoge la primera ruta de la respuesta:\n    route = result.response.route[0];\n    // Elige la forma de la ruta:\n    routeShape = route.shape;\n  \n    // Cree una serie lineal para usar como fuente puntual para la línea de ruta\n    linestring = new window.H.geo.LineString();\n  \n    // Empuje todos los puntos en la forma en la cadena lineal:\n    routeShape.forEach((point) => {\n      let parts = point.split(',');\n      linestring.pushLatLngAlt(parts[0], parts[1]);\n    });\n  \n    // Recupere las posiciones mapeadas de los puntos de ruta solicitados:\n    startPoint = route.waypoint[0].mappedPosition;\n    endPoint = route.waypoint[1].mappedPosition;\n  \n    // Crea una polilínea para mostrar la ruta.:\n    let routeLine = new window.H.map.Polyline(linestring, {\n      style: { strokeColor: 'green', lineWidth: 6 },\n      arrows: { fillColor: 'white', frequency: 2, width: 0.8, length: 0.7 }\n    });\n  \n    // Crea un marcador para el punto de inicio::\n    let startMarker = new window.H.map.Marker({\n      lat: startPoint.latitude,\n      lng: startPoint.longitude\n    });\n  \n    // Crear un marcador para el punto final:\n    let endMarker = new window.H.map.Marker({\n      lat: endPoint.latitude,\n      lng: endPoint.longitude\n    });\n  \n    // Agrega la polilínea de la ruta y los dos marcadores al mapa\n    this.map.addObjects([routeLine, startMarker, endMarker]);\n  \n    // Configure la ventana gráfica del mapa para que toda la ruta sea visible.:\n    this.map.setViewBounds(routeLine.getBounds());\n    }\n  };\n  \n  // Configure la ventana gráfica del mapa para que toda la ruta sea visible.\n  let router = this.platform.getRoutingService();\n  \n  // Llame a CalculateRoute () con los parámetros de enrutamiento, la devolución de llamada y una función de devolución de llamada de error (llamada si se produce un error de comunicación):\n  \n  router.calculateRoute(routingParameters, onResult,\n    (error) => {\n      alert(error.message);\n    });\n\n    router.calculateRoute(routingParameters1, onResult,\n        (error) => {\n          alert(error.message);\n        });\n    \n    // router.calculateRoute(routingParameters2, onResult,\n    //         (error) => {\n    //           alert(error.message);\n    //         });\n   \n//     var svgMarkup = '<svg width=\"24\" height=\"24\" ' +\n//   'xmlns=\"http://www.w3.org/2000/svg\">' +\n//   '<rect stroke=\"white\" fill=\"#1b468d\" x=\"1\" y=\"1\" width=\"22\" ' +\n//   'height=\"22\" /><text x=\"12\" y=\"18\" font-size=\"12pt\" ' +\n//   'font-family=\"Arial\" font-weight=\"bold\" text-anchor=\"middle\" ' +\n//   'fill=\"white\">H</text></svg>'\n\n\n//   var icon = new window.H.map.Icon(svgMarkup),\n//   coords = {lat: -33.446136087311324, lng: -70.64452567456583},\n  \n//   marker = new window.H.map.Marker(coords, {icon: icon});\n//   console.log(Object.keys(coords))\n//   ;\n  \n  \n//   this.map.addObject(marker);\n//   this.map.setCenter(coords);\n\nfunction addMarkersToMap (map) {\n    var svgMarkup = '<svg width=\"24\" height=\"24\" ' +\n  'xmlns=\"http://www.w3.org/2000/svg\">' +\n  '<rect stroke=\"white\" fill=\"#1b468d\" x=\"1\" y=\"1\" width=\"22\" ' +\n  'height=\"22\" /><text x=\"12\" y=\"18\" font-size=\"12pt\" ' +\n  'font-family=\"Arial\" font-weight=\"bold\" text-anchor=\"middle\" ' +\n  'fill=\"white\">H</text></svg>'\n  var icon = new window.H.map.Icon(svgMarkup),\n\n    coords = {lat:-33.446136, lng:-70.644526};\n    var lugar1Marker = new window.H.map.Marker(coords, {icon: icon});\n    map.addObject(lugar1Marker);\n    \n    let coords2 = {lat: -33.44123, lng: -70.64635};\n    var lugar2Marker = new window.H.map.Marker(coords2, {icon: icon});\n    map.addObject(lugar2Marker);\n\n    let coords3 = {lat:-33.43448, lng:-70.651156};\n    var lugar3Marker = new window.H.map.Marker(coords3, {icon: icon});\n    map.addObject(lugar3Marker);\n  \n    let coords4 = {lat: -33.432474, lng: -70.657894};\n    var lugar4Marker = new window.H.map.Marker(coords4, {icon: icon});\n    map.addObject(lugar4Marker);\n  \n    let coords5 = {lat: -33.42977, lng: -70.64783};\n    var lugar5Marker = new window.H.map.Marker(coords5, {icon:icon});\n    map.addObject(lugar5Marker);\n}\n\n  addMarkersToMap(this.map);\n\n\n    var stylePto = {\n        fillColor: 'rgba(35, 51, 129, 0.3)',\n        lineWidth: 5,\n        strokeColor: 'rgba(114, 38, 51, 1)'\n    };\n    var circle = new window.H.map.Circle(\n    new window.H.geo.Point(-33.4493132, -70.6503051), //center\n    1000, // Radius in meters\n    {stylePto: stylePto}\n     );\n     circle.setData('Circle');\n     var container = new window.H.map.Group({\n        objects: [circle]\n      });\n      this.map.addObject(container);\n    \n\n}\n\nshouldComponentUpdate(props, state) {\n    this.changeTheme(props.image, props.style);\n    return false;\n}\n\n//Cree una instancia de MapTileService para solicitar mosaicos base (es decir, base.map.api.here.com\n//aqui especificamos el estilo del mapa y como se mostrara\nchangeTheme(image, style) {\n    var tiles = this.platform.getMapTileService({\n        'type': 'base'\n    });\n    var layer = tiles.createTileLayer(\n        'maptile',\n        image,\n        256,\n        'png', {\n            'style': 'flame'\n        }\n    );\n    this.map.setBaseLayer(layer);\n}\n\n render (){\n    return (\n        <div id = \"here-map\"\n            style = {{ width: '360px', height: '640px', background: 'grey'}}\n        />\n    )\n    }\n}\n    \n\nexport default Map;\n\n","import React, {Component} from 'react';\nimport './ownlocation.css';\nimport { runInThisContext } from 'vm';\n\nclass OwnLocation extends Component{\n\n    constructor(props) {\n        super(props);\n        this.platform = null;\n        this.map = null;\n        this.update=this.update.bind(this);\n        this.state = {\n            app_id: props.app_id,\n            app_code: props.app_code,\n            position: null,\n            zoom: props.zoom,\n            map: null,\n            image: props.image,\n            style: props.style,\n            value:[]\n        }\n    }\n\n    getPlatform() {return new window.H.service.Platform(this.state);}\n    getMap(container, layers, settings) {return new window.H.Map(container, layers, settings);}\n    getEvents(map) {return new window.H.mapevents.MapEvents(map);}\n    getUI(map, layers) {return new window.H.ui.UI.createDefault(map, layers);}\n\n    componentDidMount() {\n\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                (position) => {\n                    this.map.setCenter({\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude\n                    });\n                    var ownMarker = new window.H.map.Marker({lat:position.coords.latitude, lng:position.coords.longitude});\n                    (this.map).addObject(ownMarker);\n\n                    var stylePto = {fillColor: 'rgba(35, 51, 129, 0.3)',lineWidth: 5,strokeColor: 'rgba(114, 38, 51, 1)'};\n                    var circle = new window.H.map.Circle(\n                    new window.H.geo.Point(position.coords.latitude, position.coords.longitude),500,{stylePto: stylePto} );\n                    circle.setData('Circle');\n                    var container = new window.H.map.Group({objects: [circle]});\n                    this.map.addObject(container);\n                },\n                (error) => this.setState({\n                    error: error.message\n                })\n            );\n        }\n        //aqui se llaman todos los estados\n        this.platform = this.getPlatform();\n        //aqui se configura el tipo de mapa\n        var layers = this.platform.createDefaultLayers();\n        //con element renderizamos el mapa\n        var element = document.getElementById('here-map');\n        //muestra mapa de acuerdo a mi ubicacion\n        this.map = this.getMap(element, layers.normal.map, {\n            center: this.state.center,\n            zoom: this.state.zoom,\n        }); \n        //con esto puedo hacer zoom \n        new window.H.mapevents.Behavior(new window.H.mapevents.MapEvents(this.map));\n      \n        this.getUI(this.map, layers);\n        this.setState({...this.state, map: this.map});\n        // create default UI with layers provided by the platform\n        var ui = window.H.ui.UI.createDefault(this.map, layers); \n\n        const addMarkerToGroup = (map, group, coord, html) => {\n            var svgMarkup = '<svg width=\"24\" height=\"24\" ' +\n            'xmlns=\"http://www.w3.org/2000/svg\">' +\n            '<rect stroke=\"white\" fill=\"#1b468d\" x=\"1\" y=\"1\" width=\"22\" ' +\n            'height=\"22\" /><text x=\"12\" y=\"18\" font-size=\"12pt\" ' +\n            'font-family=\"Arial\" font-weight=\"bold\" text-anchor=\"middle\" ' +\n            'fill=\"white\">H</text></svg>'\n            var icon = new window.H.map.Icon(svgMarkup),\n            marker = new window.H.map.Marker({lat:coord[0], lng:coord[1]}, {icon: icon});\n            map.addObject(marker);\n\n            // add custom data to the marker\n            marker.setData(html);\n            group.addObject(marker);\n        }\n        \n        const addInfoBubble = (map, coord, name, key, update) => {\n            var group = new window.H.map.Group();\n            map.addObject(group);\n            // add 'tap' event listener, that opens info bubble, to the group\n            group.addEventListener('tap', update.bind(this, key), false);\n            \n            addMarkerToGroup(map, group, coord,\n                \"<div class='info-bubble'><p class='content-info-bubble'>\"+name+\"</p>\" + \n                \"<button value=\"+key+\">Más info</button>\")\n        }\n         Object.keys(this.props.listCompany).map(key=>(\n            addInfoBubble(this.map, this.props.listCompany[key].located, this.props.listCompany[key].name,key,this.update)\n          \n        ));\n        \n    }\n\n    update(key){\n        \n        this.props.update(this.props.listCompany[key]);\n    }\n\n    shouldComponentUpdate(props, state) {\n        this.changeTheme(props.image, props.style);\n        return false;\n    }\n\n    //Cree una instancia de MapTileService para solicitar mosaicos base (es decir, base.map.api.here.com\n    //aqui especificamos el estilo del mapa y como se mostrara\n    changeTheme(image, style) {\n        var tiles = this.platform.getMapTileService({\n            'type': 'base'\n        });\n        var layer = tiles.createTileLayer(\n            'maptile',\n            image,\n            256,\n            'png', {\n                'style': 'flame'\n            }\n        );\n        this.map.setBaseLayer(layer);\n    }\n    render(){\n        return(\n            <div id = \"here-map\"\n                style = {{ width: '290px', height: '600px', background: 'grey'}}\n            />\n        )\n    }\n}\nexport default OwnLocation;","import React, { Component } from 'react';\nimport './Login.css';\nimport Button from 'react-bootstrap/Button';\n\nclass Login extends Component {\n\n    render() {\n        return (\n\n            <div className=\"background\">\n            <img className=\"logo\"src=\" https://raw.githubusercontent.com/marianacarbonell/HackathonFinal/master/bocetos/logo%20hackathon.png\"/>\n                <form className=\"form\">\n                    <div>\n                        <p className=\"email\">EMAIL</p>\n                        <input type=\"text\" className=\"input\"></input></div>\n                    <div>\n                        <p className=\"password\">CONTRASEÑA</p>\n                        <input className=\"input\" type=\"text\" className=\"input2\"></input>\n                        </div>\n                </form>\n                <Button variant=\"outline-primary\" className=\"btnLogin\">Registrarte</Button>\n                <p className=\"text\">¿Ya tienes una cuenta?</p>\n                <Button variant=\"outline-primary\" className=\"btnSingin\">Iniciar Sesión</Button>\n\n            </div>\n        )\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport './Navbar.css';\nimport Button from 'react-bootstrap/Button';\n\nclass Navbar extends Component {\n\n    render() {\n        return (\n            <div className=\"container\">\n            <div className=\"navbarIcons\">\n                <Button className=\"glassBtn \" variant=\"outline-ligth\" >\n                    <img  className=\"Icon\" src=\"https://raw.githubusercontent.com/marianacarbonell/HackathonFinal/master/bocetos/vidrio-letra.png\" />\n                </Button>\n                <Button className=\"glassBtn \" variant=\"outline-ligth\" >\n                    <img  className=\"Icon\" src=\"https://raw.githubusercontent.com/marianacarbonell/HackathonFinal/master/bocetos/tela-letra.png\" />\n                </Button>\n                <Button className=\"glassBtn \" variant=\"outline-ligth\" >\n                    <img  className=\"Icon\" src=\"https://raw.githubusercontent.com/marianacarbonell/HackathonFinal/master/bocetos/plastico-letra.png\" />\n                </Button>\n                <Button className=\"glassBtn \" variant=\"outline-ligth\" >\n                    <img  className=\"Icon\" src=\"https://raw.githubusercontent.com/marianacarbonell/HackathonFinal/master/bocetos/papel-letra.png\" />\n                </Button>\n                <Button className=\"glassBtn \" variant=\"outline-ligth\" >\n                    <img  className=\"Icon\" src=\"https://raw.githubusercontent.com/marianacarbonell/HackathonFinal/master/bocetos/celulares-letra.png\" />\n                </Button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport './Footer.css';\n\nclass Footer extends Component {\n\n    render() {\n        return (\n            <div className=\"iconsFooter\">\n            <i class=\"fas fa-user-circle color\"></i>\n            <i class=\"fas fa-plus-circle\"></i>\n            <i class=\"fas fa-map-marker-alt color\"></i>\n            </div>\n        )\n    }\n}\nexport default Footer;\n\n\n\n\n\n","import React, { Component } from 'react';\nimport './Company.css';\n\nclass Company extends Component {\n\n    render() {\n        return (\n            <div className=\"companyBody\">\n                <div className=\"upIcons\">\n                    <i class=\"fas fa-arrow-left\"></i>\n                    <p className=\"back\">Volver</p>\n                </div>\n                {/* <div className=\"textBackground\">\n                    <p className=\"companyText\">Comparte tu dato de material reutilizable</p>\n                </div> */}\n                <div className=\"container\">\n                    <i class=\"far fa-lightbulb\"></i>\n                    <input className=\"input\" placeholder=\"Nombre de la empresa o fábrica\"></input>\n                    <div>\n                        <i class=\"far fa-smile\"></i>\n                        <input className=\"input\" placeholder=\"Que realiza la empresa\"></input>\n                    </div>\n                    <div>\n                        <i class=\"far fa-clock\"></i>\n                        <input className=\"input\" placeholder=\"Horario en el que atienden\"></input>\n                    </div>\n                    <div>\n                        <i class=\"far fa-star\"></i>\n                        <input className=\"input\" placeholder=\"Que material reutilizable tienen\"></input>\n                    </div>\n                    <div>\n                        <i class=\"far fa-envelope\"></i>\n                        <input className=\"input\" placeholder=\"Algún contacto,mail,número,...\"></input>\n                    </div>\n                    <div>\n                        <i class=\"fas fa-map-marker-alt\"></i>\n                        <input className=\"input\" placeholder=\"Dirección\"></input>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Company;","import React, {Component} from 'react';\nimport './signin.css';\nimport {Container, Row, Col, Button, Image } from 'react-bootstrap';\nimport profileCompany from '../img/profile-company.png';\n\nclass Signin extends Component{\n\n    render(){\n        return(\n            <div id=\"container\">\n                <Row id=\"row-profile\">\n                    <Image id=\"signin-profile\" src={profileCompany} roundedCircle />\n                </Row>\n                <Row id=\"row-form\">\n                    <Col xs=\"2\" id=\"col-icon\">\n                        <Row className=\"icon\"><i class=\"far fa-user\"></i></Row>\n                        <Row className=\"icon\"><i class=\"far fa-envelope\"></i></Row>\n                        <Row className=\"icon\"><i class=\"fas fa-lock\"></i></Row>\n                        <Row className=\"icon\"><i class=\"far fa-lightbulb\"></i></Row>\n                        <Row className=\"icon\"><i class=\"fas fa-globe-americas\"></i></Row>\n                    </Col>\n                    <Col id=\"col-tittle\">\n                        <Row className=\"tittle\">Nombre</Row>\n                        <Row className=\"tittle\">Correo</Row>\n                        <Row className=\"tittle\">Clave</Row>\n                        <Row className=\"tittle\">Emprendimiento</Row>\n                        <Row className=\"tittle\">Web</Row>\n                        <Row id=\"materiales\">Material Reutilizable</Row>\n                    </Col>\n                    <Col id=\"col-name\">\n                        <Row className=\"input\"> Sofía Tala</Row>\n                        <Row className=\"input\">sofia.t@gmail.com</Row>\n                        <Row className=\"input\"><i class=\"fas fa-ellipsis-h\"></i><i class=\"fas fa-ellipsis-h\"></i></Row>\n                        <Row className=\"input\"> Minka</Row>\n                        <Row className=\"input\"> Minkaccesorios</Row>\n                        <Row id=\"icon-material\"><i class=\"far fa-user\"></i><i class=\"far fa-user\"></i></Row>\n                    </Col>\n                </Row>\n                <Row id=\"button-profile\"><Button variant=\"outline-primary\">REGISTRAR</Button></Row>\n            </div>\n        )\n    }\n}\n\nexport default Signin;","import React, {Component} from 'react';\n\n\nclass FilterMarker extends Component{\n\n    constructor(props) {\n        super(props);\n        this.update=this.update.bind(this);\n        this.state = {\n            app_id: props.app_id,\n            app_code: props.app_code,\n            position: null,\n            zoom: props.zoom,\n            map: null,\n            image: props.image,\n            style: props.style,\n            markerGlass: [],\n            markerPaperboard: [],\n            markerPlastics: [],\n            markerTechnology: [],\n            markerTextile: [],\n            objectsToEliminate1: [],\n            \n\n            \n        }\n        this.showGlassMarker=this.showGlassMarker.bind(this);\n        this.showPaperboardMarker=this.showPaperboardMarker.bind(this);\n        this.showPlasticsMarker=this.showPlasticsMarker.bind(this);\n        this.showTechonologyMarker=this.showTechonologyMarker.bind(this);\n        this.showTextileMarker=this.showTextileMarker.bind(this);\n    }\n\n\n    \n\n    getPlatform() {return new window.H.service.Platform(this.state);}\n    getMap(container, layers, settings) {return new window.H.Map(container, layers, settings);}\n    getEvents(map) {return new window.H.mapevents.MapEvents(map);}\n    getUI(map, layers) {return new window.H.ui.UI.createDefault(map, layers);}\n    componentDidMount() {\n\n        let getPosition = () => {\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        this.map.setCenter({\n                            lat: position.coords.latitude,\n                            lng: position.coords.longitude\n                        });\n                        var ownMarker = new window.H.map.Marker({lat:position.coords.latitude, lng:position.coords.longitude});\n                        (this.map).addObject(ownMarker);\n\n                        var stylePto = {fillColor: 'rgba(35, 51, 129, 0.3)',lineWidth: 5,strokeColor: 'rgba(114, 38, 51, 1)'};\n                        var circle = new window.H.map.Circle(\n                        new window.H.geo.Point(position.coords.latitude, position.coords.longitude),1000,{stylePto: stylePto} );\n                        circle.setData('Circle');\n                        this.map.addObject(circle);\n\n                    },\n                    (error) => this.setState({\n                        error: error.message\n                    })\n                );\n            }\n        };\n\n        \n\n        //aqui se llaman todos los estados\n        this.platform = this.getPlatform();\n        //aqui se configura el tipo de mapa\n        var layers = this.platform.createDefaultLayers();\n        //con element renderizamos el mapa\n        var element = document.getElementById('here-map');\n        //muestra mapa de acuerdo a mi ubicacion\n        this.map = this.getMap(element, layers.normal.map, {\n            center: this.state.center,\n            zoom: this.state.zoom,\n        }); \n        setTimeout(getPosition, 0);\n        //con esto puedo hacer zoom \n        new window.H.mapevents.Behavior(new window.H.mapevents.MapEvents(this.map));\n      \n       this.getUI(this.map, layers);\n        this.setState({\n            ...this.state,\n            map: this.map\n        });\n        \n        \n        fetch('https://places.cit.api.here.com/places/v1/autosuggest?at=-33.4190702,-70.6418162&q=vidrio&app_id=SqgXt9Xu4ZtrdyRXBAHw&app_code=4_H5feYpb2trd0PaEdD_bQ')\n        .then(data => data.json())\n        .then(data => {\n            // console.log(data)\n            let glassPosition = data.results.filter(glass => {\n                return glass.position;\n            })\n            return glassPosition;\n        })\n        .then(data => {\n            this.setState({\n                ...this.state,\n                markerGlass: data, \n            }, \n        \n            )})\n\n        \n        fetch('https://places.cit.api.here.com/places/v1/autosuggest?at=-33.4190702,-70.6418162&q=carton&app_id=SqgXt9Xu4ZtrdyRXBAHw&app_code=4_H5feYpb2trd0PaEdD_bQ')\n        .then(data => data.json())\n        .then(data => {\n            // console.log(data)\n            let paperboardPosition = data.results.filter(paperboard => {\n                return paperboard.position;\n            })\n            return paperboardPosition;\n        })\n        .then(data => {\n            this.setState({\n                ...this.state,\n                markerPaperboard: data, \n            }, \n        \n            )})\n            \n\n        fetch('https://places.cit.api.here.com/places/v1/autosuggest?at=-33.4190702,-70.6418162&q=plasticos&app_id=SqgXt9Xu4ZtrdyRXBAHw&app_code=4_H5feYpb2trd0PaEdD_bQ')\n        .then(data => data.json())\n                .then(data => {\n                // console.log(data)\n                let plasticsPosition = data.results.filter(plastics => {\n                    return plastics.position;\n                })\n                return plasticsPosition;\n            })\n            .then(data => {\n                this.setState({\n                    ...this.state,\n                    markerPlastics: data, \n                }, \n            \n                )})\n\n        fetch('https://places.cit.api.here.com/places/v1/autosuggest?at=-33.4190702,-70.6418162&q=tecnologia&app_id=SqgXt9Xu4ZtrdyRXBAHw&app_code=4_H5feYpb2trd0PaEdD_bQ')\n                .then(data => data.json())\n                        .then(data => {\n                        // console.log(data)\n                        let technologyPosition = data.results.filter(technology => {\n                            return technology.position;\n                        })\n                        return technologyPosition;\n                    })\n                    .then(data => {\n                        this.setState({\n                            ...this.state,\n                            markerTechnology: data, \n                        }, \n                    \n                        )})\n        \n        fetch('https://places.cit.api.here.com/places/v1/autosuggest?at=-33.4190702,-70.6418162&q=genero&app_id=SqgXt9Xu4ZtrdyRXBAHw&app_code=4_H5feYpb2trd0PaEdD_bQ')\n                .then(data => data.json())\n                .then(data => {\n                // console.log(data)\n                let textilePosition = data.results.filter(textile => {\n                        return textile.position;\n                    })\n                        return textilePosition;\n                    })\n                    .then(data => {\n                        this.setState({\n                        ...this.state,\n                        markerTextile: data, \n                        }, \n                            \n                        )})                \n        }\n\n    showGlassMarker() {\n        this.map.removeObjects(this.state.objectsToEliminate1)\n        let tempArray = []\n\n        this.state.markerGlass.forEach(glass => {\n            let marker = new  window.H.map.Marker({lat: glass.position[0], lng: glass.position[1]})\n            this.map.addObject(marker);\n            tempArray.push(marker);\n            // add 'tap' event listener, that opens info bubble, to the group\n            marker.addEventListener('tap', this.update.bind(this, glass), false);\n        });\n        this.setState({\n            ...this.state,\n            objectsToEliminate1: tempArray\n        })\n  \n    }\n\n    \n\n    showPaperboardMarker() {\n            this.map.removeObjects(this.state.objectsToEliminate1)\n            let tempArray = []\n        //aqui hay que limpiar el mapa\n        this.state.markerPaperboard.forEach(paperboard => {\n            let marker = new  window.H.map.Marker({lat: paperboard.position[0], lng: paperboard.position[1]})\n            this.map.addObject(marker);\n            tempArray.push(marker);\n            // add 'tap' event listener, that opens info bubble, to the group\n            marker.addEventListener('tap', this.update.bind(this, paperboard), false);\n        });\n        this.setState({\n            ...this.state,\n            objectsToEliminate1: tempArray \n        })\n    }\n\n    showPlasticsMarker() {\n            this.map.removeObjects(this.state.objectsToEliminate1)\n            let tempArray= [];\n\n        this.state.markerPlastics.forEach(plastics => {\n            let marker = new  window.H.map.Marker({lat: plastics.position[0], lng: plastics.position[1]})\n            this.map.addObject(marker);\n            tempArray.push(marker);\n            // add 'tap' event listener, that opens info bubble, to the group\n            marker.addEventListener('tap', this.update.bind(this, plastics), false);\n        });\n\n        this.setState({\n            ...this.state,\n            objectsToEliminate1: tempArray\n        })\n    }\n\n    showTechonologyMarker() {\n            this.map.removeObjects(this.state.objectsToEliminate1)\n            let tempArray = []\n\n            this.state.markerTechnology.forEach(technology => {\n            let marker = new  window.H.map.Marker({lat: technology.position[0], lng: technology.position[1]})\n            this.map.addObject(marker);\n\n            tempArray.push(marker);\n            // add 'tap' event listener, that opens info bubble, to the group\n            marker.addEventListener('tap', this.update.bind(this, technology), false);\n        });\n\n        this.setState({\n            ...this.state,\n            objectsToEliminate1: tempArray\n        })\n    }\n\n    showTextileMarker() {\n        this.map.removeObjects(this.state.objectsToEliminate1)\n        let tempArray = []\n\n\n        this.state.markerTextile.forEach(textile => {\n            let marker = new  window.H.map.Marker({lat: textile.position[0], lng: textile.position[1]})\n            this.map.addObject(marker);\n            tempArray.push(marker);\n\n            // add 'tap' event listener, that opens info bubble, to the group\n            marker.addEventListener('tap', this.update.bind(this, textile), false);\n        });\n        this.setState({\n            ...this.state,\n            objectsToEliminate1: tempArray\n        })\n    }\n\n    update(info){\n        this.props.update(info);\n    }\n\nshouldComponentUpdate(props, state) {\n    this.changeTheme(props.image, props.style);\n    return false;\n}\n\n//Cree una instancia de MapTileService para solicitar mosaicos base (es decir, base.map.api.here.com\n//aqui especificamos el estilo del mapa y como se mostrara\nchangeTheme(image, style) {\n    var tiles = this.platform.getMapTileService({\n        'type': 'base'\n    });\n    var layer = tiles.createTileLayer(\n        'maptile',\n        image,\n        256,\n        'png', {\n            'style': 'flame'\n        }\n    );\n    this.map.setBaseLayer(layer);\n}\n    render(){\n        return(\n            <div>\n                <div>\n                <button onClick={this.showPaperboardMarker}>Carton</button>\n                <button onClick={this.showPlasticsMarker}>Pásticos</button>\n                <button onClick={this.showGlassMarker} >Vidrios</button>\n                <button onClick={this.showTechonologyMarker}>Teconogía</button>\n                <button onClick={this.showTextileMarker}>Textil</button>\n            </div>\n            <div id = \"here-map\"\n                style = {{ width: '360px', height: '640px', background: 'grey'}}\n            />\n            \n            </div>\n        )\n    }\n}\nexport default FilterMarker;","import React, {Component} from 'react';\nimport './companyprofile.css';\nimport {Container, Row, Col, Button, Image } from 'react-bootstrap';\nimport profileCompany from './img/profile-company.png';\nimport tela from './img/tela-letra.png';\n\nclass CompanyProfile extends Component{\n\n    render(){\n        return(\n            <Container id=\"container\">\n                <Row className=\"rowMe\" id=\"back\"><i id=\"icon-back\" class=\"fas fa-chevron-left\"></i>VOLVER</Row>\n                <Row className=\"rowMe\" id=\"row-tittle\">\n                    <Col id=\"tittle\">Textil Sumey</Col>\n                    <Col>\n                        <Image id=\"profile\" src={profileCompany} roundedCircle />\n                        <div id=\"row-text\">\n                            <Row id=\"mayorista\" className=\"text\">Mayorista textil en</Row>\n                            <Row id=\"recoleta\" className=\"text\">Recoleta, Chile</Row>\n                        </div>\n                    </Col>\n                </Row>\n                <Row className=\"rowMe\" id=\"row-type\">\n                    <div id=\"col-info\">Material reutilizable disponible</div>\n                    <Col> <Image id=\"tela-icon\" src={tela}/></Col>\n                </Row>\n                <div id=\"row-container\">\n                    <Row className=\"rowMe\" id=\"horario\">Horarios</Row>\n                    <Row className=\"rowMe\" id=\"row-horario\">\n                        <Col className=\"day\">L</Col>\n                        <Col className=\"day\">M</Col>\n                        <div id=\"select-one\"></div>\n                        <Col className=\"day\">W</Col>\n                        <Col className=\"day\">J</Col>\n                        <div id=\"select-two\"></div>\n                        <Col className=\"day\">V</Col>\n                        <Col className=\"day\">S</Col>\n                    </Row>\n                    <Row className=\"rowMe\" id=\"five\">Entre 17:00 - 18:00</Row>\n                    <Row className=\"rowMe\" id=\"row-info\">\n                        <div id=\"direction\">Dirección</div>\n                        <div>Antonia López de Bello 285, Recoleta</div>\n                        <div>Región Metropolitana</div>\n                    </Row>\n                    <Row className=\"rowMe\" id=\"button\"><Button variant=\"outline-primary\">GENERAR RUTA</Button></Row>\n                </div>\n                \n            </Container>\n        )\n    }\n}\n\nexport default CompanyProfile;","import React, { Component } from 'react';\nimport Route from './components/Maps/Route';\nimport OwnLocation from './components/Maps/OwnLocation';\nimport './index.css';\nimport Login from './components/Login/Login';\nimport Navbar from './components/Navbar/Navbar'\nimport Footer from './components/Footer/Footer';\nimport Company from './components/formulario empresa/Company'\nimport Signin from './components/signin/Signin';\nimport CompanyProfile from './components/CompanyProfile';\n// import Map from './components/Maps/Map';\nimport FilterMarket from './components/Maps/FilterMarker';\nimport {companies} from './components/Maps/companies.json';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.getValue=this.getValue.bind(this);\n    this.map=null;\n    this.state = {\n        image: 'normal.day',\n        latitude: false,\n        longitude: false,\n        error: null,\n        companies: companies\n    }\n  }\n  getValue(info){\n    console.log(info);\n  }\n    \n\n    render() {\n        return (\n            <div className=\"App\">\n                <FilterMarket\n                    app_id=\"SqgXt9Xu4ZtrdyRXBAHw\"\n                    app_code=\"4_H5feYpb2trd0PaEdD_bQ\"\n                    zoom=\"13\"\n                    image={this.state.image }\n                    listCompany={this.state.companies}\n                    update={this.getValue}\n                    />  \n                <Login/>\n                        \n            </div>\n        );\n    }\n}\n\n\nexport default App;\n\n\n/*\n                <OwnLocation\n                    app_id=\"SqgXt9Xu4ZtrdyRXBAHw\"\n                    app_code=\"4_H5feYpb2trd0PaEdD_bQ\"\n                    zoom=\"15\"\n                    image={this.state.image }\n                    listCompany={this.state.companies}\n                    update={this.getValue}\n                />\n                <Route \n                    app_id=\"SqgXt9Xu4ZtrdyRXBAHw\"\n                    app_code=\"4_H5feYpb2trd0PaEdD_bQ\"\n                    zoom=\"10\"\n                    image={this.state.image }\n                />\n*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}